interface IProgram<TResult:int, TArg> {
  main<TArg2>(arg:TArg, arg2:TArg2):TResult;
}

final struct Program
  : IProgram<int, char>,
    interface { main_func:int<TArg2>(char, short, TArg2); } {

  main_func:int(char, short) = (c, b) => {
    return Task.run<int>(() => {
      var i = 0,
        j = c,
        mul = <T>(x, y:T):T => x * y,
        mul:T<T>(T, T) = (x, y) => x * y;
      std.cout << mul<double>(i, j) ? "oops":"Hello World";
      for (var x:double = 0, y = 0; x == y; { y++; x++; }) {
        break;
      }
      return 0;
    });
  }

  fibonacci(n:int):int => {
    return n == 0 ?
      n : n == 1 ?
        n : fibonacci(n-1)+fibonacci(n-2);
  }

  fibonacci(n:int):int => {
    switch (n) {
      case 0:
        return 0;
      case 1:
        return 1;
      default:
        return fibonacci(n-1)+fibonacci(n-2);
    }
  }

  main(arg:char, arg2:short):int => {
    return main_func(arg, true);
  }
}